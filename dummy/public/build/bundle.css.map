{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "Document.svelte",
    "Index.svelte",
    "Query.svelte",
    "JSON.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { setGlobal, stores } from 'swoof';\n  import Index from './Index.svelte';\n\n  let config = {\n    firebase: {\n      apiKey: \"AIzaSyDwCGLTmvKCiCxIO9msehKyULJ_rilnEvw\",\n      authDomain: \"quatsch-38adf.firebaseapp.com\",\n      databaseURL: \"https://quatsch-38adf.firebaseio.com\",\n      projectId: \"quatsch-38adf\",\n      storageBucket: \"quatsch-38adf.appspot.com\",\n      messagingSenderId: \"316370319143\",\n      appId: \"1:316370319143:web:1ea76935876b7619\"\n    },\n    firestore: {\n      enablePersistence: true\n    }\n  };\n\n  let ready = stores.configure('main', config);\n  let store = stores.create('main', 'main');\n  setGlobal({ store });\n</script>\n\n{#await ready}\n  <div class=\"loading\">Loadingâ€¦</div>\n{:then}\n  <div class=\"application\">\n    <Index/>\n  </div>\n{/await}\n\n<style>\n  .loading {\n    font-size: 12px;\n  }\n</style>",
    "<script>\n  import { JSON, stores, setGlobal } from 'swoof';\n\n  let store = stores.get('main');\n\n  let id = 'first';\n\n  $: doc = store.doc(`foobar/${id}`).existing();\n  $: setGlobal({ doc });\n\n  let save = () => {\n    doc.data.updatedAt = store.serverTimestamp;\n    console.log('save', doc.serialized.data);\n    doc.save();\n  };\n\n</script>\n\n<div class=\"single\">\n\n  <div class=\"id\">\n    <input bind:value={id}/>\n  </div>\n\n  <div class=\"content\">\n    <div class=\"text\">\n      <input bind:value={$doc.data.text}/>\n    </div>\n    <div class=\"actions\">\n      <button on:click={() => save()}>Save</button>\n    </div>\n  </div>\n\n  <JSON object={store}/>\n  <JSON object={$doc}/>\n</div>\n\n<style>\n  .id {\n    margin-bottom: 20px;\n  }\n  .content {\n    margin-bottom: 10px;\n  }\n  .text {\n    margin-bottom: 10px;\n  }\n</style>",
    "<script>\n  import Document from './Document.svelte';\n  import Query from './Query.svelte';\n  import First from './First.svelte';\n\n  let thing = true;\n  let toggle = () => thing = !thing;\n\n  let routes = [\n    { label: 'Document', component: Document },\n    { label: 'Query', component: Query },\n    { label: 'First', component: First }\n  ];\n\n  let selected = routes[0];\n\n  let select = route => selected = route;\n\n</script>\n\n<div class=\"index\">\n\n  <div class=\"header\">\n    <div class=\"items\">\n      {#each routes as route}\n        <div class=\"item\" class:selected={route === selected} on:click={() => select(route)}>{route.label}</div>\n      {/each}\n    </div>\n    <button class=\"toggle\" on:click={toggle}>Toggle</button>\n  </div>\n  {#if thing}\n    <div class=\"route\">{selected.label}</div>\n    <div class=\"content\">\n      <svelte:component this={selected.component}/>\n    </div>\n  {/if}\n</div>\n\n<style type=\"text/scss\">.header {\n  border-bottom: 1px solid #eee;\n  padding: 5px 10px;\n  display: flex;\n  flex-direction: row;\n  align-items: center; }\n  .header > .items {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    flex: 1; }\n    .header > .items > .item {\n      margin: 0 10px 0 0;\n      cursor: pointer; }\n      .header > .items > .item.selected {\n        text-decoration: underline; }\n\n.route {\n  font-weight: 600;\n  padding: 10px; }\n\n.content {\n  padding: 10px; }\n</style>",
    "<script>\n  import { JSON, stores, setGlobal } from 'swoof';\n\n  let store = stores.get('main');\n\n  let query = store.collection('messages').query();\n  setGlobal({ query });\n\n  $: $query && console.log('query did change');\n\n  $: doc = $query.content[0];\n  $: setGlobal({ doc });\n\n</script>\n\n<div class=\"query\">\n  <JSON object={$query}/>\n  {#if $doc}\n    <input bind:value={$doc.data.text}/>\n    <button on:click={() => doc.save()}>Save</button>\n  {/if}\n</div>\n\n<div class=\"docs\">\n  {#each $query.content as doc}\n    <div class=\"doc\">\n      <JSON object={doc}/>\n    </div>\n  {/each}\n</div>\n\n<style type=\"text/scss\">.query {\n  margin-bottom: 10px; }\n\n.docs > .doc {\n  border: 1px solid #eee;\n  border-radius: 3px;\n  margin-bottom: 10px;\n  padding: 10px; }\n</style>",
    "<script>\n  export let object;\n  $: string = JSON.stringify(object, null, 2);\n</script>\n\n<style>\n  .json {\n    font-family: 'Menlo';\n    font-size: 12px;\n    white-space: pre-wrap;\n  }\n</style>\n\n<div class=\"json\">{string}</div>"
  ],
  "names": [],
  "mappings": "AAiCE,QAAQ,eAAC,CAAC,AACR,SAAS,CAAE,IAAI,AACjB,CAAC;ACGD,GAAG,cAAC,CAAC,AACH,aAAa,CAAE,IAAI,AACrB,CAAC,AACD,QAAQ,cAAC,CAAC,AACR,aAAa,CAAE,IAAI,AACrB,CAAC,AACD,KAAK,cAAC,CAAC,AACL,aAAa,CAAE,IAAI,AACrB,CAAC;ACRqB,OAAO,6CAAC,CAAC,AAC/B,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CAC7B,OAAO,CAAE,GAAG,CAAC,IAAI,CACjB,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,GAAG,CACnB,WAAW,CAAE,MAAM,AAAE,CAAC,AACtB,sBAAO,CAAG,MAAM,8BAAC,CAAC,AAChB,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,GAAG,CACnB,WAAW,CAAE,MAAM,CACnB,IAAI,CAAE,CAAC,AAAE,CAAC,AACV,sBAAO,CAAG,qBAAM,CAAG,KAAK,eAAC,CAAC,AACxB,MAAM,CAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAClB,MAAM,CAAE,OAAO,AAAE,CAAC,AAClB,sBAAO,CAAG,qBAAM,CAAG,KAAK,SAAS,eAAC,CAAC,AACjC,eAAe,CAAE,SAAS,AAAE,CAAC,AAErC,MAAM,6CAAC,CAAC,AACN,WAAW,CAAE,GAAG,CAChB,OAAO,CAAE,IAAI,AAAE,CAAC,AAElB,QAAQ,6CAAC,CAAC,AACR,OAAO,CAAE,IAAI,AAAE,CAAC;AC7BM,MAAM,4BAAC,CAAC,AAC9B,aAAa,CAAE,IAAI,AAAE,CAAC,AAExB,mBAAK,CAAG,IAAI,cAAC,CAAC,AACZ,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CACtB,aAAa,CAAE,GAAG,CAClB,aAAa,CAAE,IAAI,CACnB,OAAO,CAAE,IAAI,AAAE,CAAC;AChChB,KAAK,cAAC,CAAC,AACL,WAAW,CAAE,OAAO,CACpB,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,QAAQ,AACvB,CAAC"
}